{
	// Place your Assignment1 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Include OpenGL": {
		"scope": "C++,C,c++,c,cpp,CPP,h,h++,hpp,HPP,H",
		"prefix": "include OpenGL",
		"body": [

			"#ifdef __APPLE__",
			"#include<GLUT/glut.h>",
			"#else",
			"#include<GL/glut.h>",
			"#endif",
			"",
			"#include<iostream>",
			"",
			"#include\"point.h\"",
			"",
			"using namespace std;",
			"",
			"$0"

		],
		"description": "import openGL libraries"
	},

	"Start Paininting": {
		"scope": "C++,C,c++,c,cpp,CPP,h,h++,hpp,HPP,H",
		"prefix": "paint",
		"body": [

			"int phy_width = $2;",
			"int phy_hight = $3;",
			"int logWidth = $4;",
			"int logHeight = $5;",
			"",
			"Point center(logWidth/2, logHeight/2);",
			"",
			"float random_x()",
			"{",
				"\treturn rand() % (logWidth-1) + 1;",
			"}",
			"",
			"float random_y()",
			"{",
				"\treturn rand() % (logHeight-1) + 1;",
			"}",
			"",
			"void rgb(int r,int g,int b)",
			"{",
				"\tglColor3ub(r,g,b);",
			"}",
			"",
			"void init2D(float r, float g, float b)",
			"{",
				"\tglClearColor(r,g,b,0);",
				"\tglMatrixMode(GL_PROJECTION);",
				"\tgluOrtho2D(0,logWidth,0,logHeight);",
			"}",
			"",
			"void display()",
			"{",
				"\tglClear(GL_COLOR_BUFFER_BIT);",
			"",
				"\trgb(255, 255, 255);",
				"\t$0",
			"",
				"\tglutSwapBuffers();",
				"\tglFlush();",
			"}",
			"",
			"int main(int argc, char *argv[])",
			"{",
				"\tglutInit(&argc,argv);",
				"\tglutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);",
				"\tglutInitWindowSize(phy_width,phy_hight);",
				"\tglutInitWindowPosition(750,100);",
				"\tglutCreateWindow(\"$1\");",
				"\tinit2D(0.0,0.0,0.0);",
				"\tglutDisplayFunc(display);",
			"",
				"\tglutMainLoop();",
			"",
				"\treturn 0;",
			"}"

		],
		"description": "paint enviroment"
	}

}